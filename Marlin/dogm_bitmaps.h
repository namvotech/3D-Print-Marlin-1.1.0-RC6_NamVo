/**
 * Marlin 3D Printer Firmware
 * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
 *
 * Based on Sprinter and grbl.
 * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

/**
 * BitMap for splashscreen
 * Generated with: http://www.digole.com/tools/PicturetoC_Hex_converter.php
 * Please note that using the high-res version takes 402Bytes of PROGMEM.
 */

//#define START_BMPHIGH

#if ENABLED(SHOW_BOOTSCREEN)
  #if ENABLED(START_BMPHIGH)
    #define START_BMPWIDTH      112
    #define START_BMPHEIGHT      38
    #define START_BMPBYTEWIDTH   14
    #define START_BMPBYTES      532 // START_BMPWIDTH * START_BMPHEIGHT / 8

    const unsigned char start_bmp[START_BMPBYTES] PROGMEM = {
      0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
      0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
      0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF,
      0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF,
      0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF,
      0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
      0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF,
      0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x3F, 0xFF,
      0xC0, 0x0F, 0xC0, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x18, 0x00, 0x1F, 0xFF,
      0xC0, 0x3F, 0xE1, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x3C, 0x00, 0x0F, 0xFF,
      0xC0, 0x7F, 0xF3, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x78, 0x3C, 0x00, 0x07, 0xFF,
      0xC0, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x78, 0x3C, 0x00, 0x03, 0xFF,
      0xC1, 0xF8, 0x7F, 0x87, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x01, 0xFF,
      0xC1, 0xF0, 0x3F, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0xFF,
      0xC1, 0xE0, 0x1E, 0x01, 0xE0, 0x1F, 0x00, 0x03, 0xE0, 0x78, 0x3C, 0x03, 0xF0, 0x7F,
      0xC1, 0xE0, 0x1E, 0x01, 0xE0, 0x7F, 0xC0, 0x0F, 0xF8, 0x78, 0x3C, 0x07, 0xFC, 0x3F,
      0xC1, 0xE0, 0x1E, 0x01, 0xE1, 0xFF, 0xE0, 0x1F, 0xFC, 0x78, 0x3C, 0x0F, 0xFE, 0x1F,
      0xC1, 0xE0, 0x1E, 0x01, 0xE3, 0xFF, 0xF0, 0x3F, 0xFE, 0x78, 0x3C, 0x1F, 0xFE, 0x0F,
      0xC1, 0xE0, 0x1E, 0x01, 0xE3, 0xF3, 0xF8, 0x3F, 0x3E, 0x78, 0x3C, 0x3F, 0x3F, 0x07,
      0xC1, 0xE0, 0x1E, 0x01, 0xE7, 0xE0, 0xFC, 0x7C, 0x1F, 0x78, 0x3C, 0x3E, 0x1F, 0x07,
      0xC1, 0xE0, 0x1E, 0x01, 0xE7, 0xC0, 0x7C, 0x7C, 0x0F, 0x78, 0x3C, 0x3C, 0x0F, 0x03,
      0xC1, 0xE0, 0x1E, 0x01, 0xE7, 0x80, 0x7C, 0x78, 0x0F, 0x78, 0x3C, 0x3C, 0x0F, 0x03,
      0xC1, 0xE0, 0x1E, 0x01, 0xE7, 0x80, 0x3C, 0x78, 0x00, 0x78, 0x3C, 0x3C, 0x0F, 0x03,
      0xC1, 0xE0, 0x1E, 0x01, 0xE7, 0x80, 0x3C, 0x78, 0x00, 0x78, 0x3C, 0x3C, 0x0F, 0x03,
      0xC1, 0xE0, 0x1E, 0x01, 0xE7, 0x80, 0x3C, 0x78, 0x00, 0x78, 0x3C, 0x3C, 0x0F, 0x03,
      0xC1, 0xE0, 0x1E, 0x01, 0xE7, 0xC0, 0x3C, 0x78, 0x00, 0x78, 0x3C, 0x3C, 0x0F, 0x03,
      0xC1, 0xE0, 0x1E, 0x01, 0xE3, 0xE0, 0x3C, 0x78, 0x00, 0x7C, 0x3C, 0x3C, 0x0F, 0x03,
      0xC1, 0xE0, 0x1E, 0x01, 0xE3, 0xFF, 0x3F, 0xF8, 0x00, 0x7F, 0xBC, 0x3C, 0x0F, 0x03,
      0xC1, 0xE0, 0x1E, 0x01, 0xE1, 0xFF, 0x3F, 0xF8, 0x00, 0x3F, 0xBF, 0xFC, 0x0F, 0x03,
      0xC1, 0xE0, 0x1E, 0x01, 0xE0, 0xFF, 0x3F, 0xF8, 0x00, 0x1F, 0xBF, 0xFC, 0x0F, 0x03,
      0xC1, 0xE0, 0x1E, 0x01, 0xE0, 0x7F, 0x3F, 0xF8, 0x00, 0x0F, 0xBF, 0xFC, 0x0F, 0x03,
      0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
      0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
      0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E,
      0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C,
      0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78,
      0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0,
      0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80 };
  #else

	/*
    #define START_BMPWIDTH      56
    #define START_BMPHEIGHT     19
    #define START_BMPBYTEWIDTH  7
    #define START_BMPBYTES      133 // START_BMPWIDTH * START_BMPHEIGHT / 8

    const unsigned char start_bmp[START_BMPBYTES] PROGMEM = {
      0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
      0x60, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
      0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
      0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F,
      0x83, 0xCF, 0x00, 0x00, 0x0C, 0x30, 0x3F,
      0x87, 0xFF, 0x80, 0x00, 0x0C, 0x30, 0x1F,
      0x86, 0x79, 0x80, 0x00, 0x0C, 0x00, 0x0F,
      0x8C, 0x30, 0xC7, 0x83, 0x8C, 0x30, 0xE7,
      0x8C, 0x30, 0xCF, 0xC7, 0xCC, 0x31, 0xF3,
      0x8C, 0x30, 0xDC, 0xEC, 0xEC, 0x33, 0xB9,
      0x8C, 0x30, 0xD8, 0x6C, 0x6C, 0x33, 0x19,
      0x8C, 0x30, 0xD0, 0x6C, 0x0C, 0x33, 0x19,
      0x8C, 0x30, 0xD8, 0x6C, 0x0C, 0x33, 0x19,
      0x8C, 0x30, 0xDC, 0x6C, 0x0E, 0x3B, 0x19,
      0x8C, 0x30, 0xCF, 0x7C, 0x07, 0x9F, 0x19,
      0x8C, 0x30, 0xC7, 0x7C, 0x03, 0x8F, 0x19,
      0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
      0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
      0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8 }; */

    #define START_BMPWIDTH      48
    #define START_BMPHEIGHT     50
    #define START_BMPBYTEWIDTH  6
    #define START_BMPBYTES      574 // START_BMPWIDTH * START_BMPHEIGHT / 8	  
	const unsigned char start_bmp[START_BMPBYTES] PROGMEM = {
		 0x00,0x00,0x00,0x00,0x00,0x00
		,0x00,0x00,0x00,0x00,0x00,0x00
		,0x01,0xff,0xff,0xf8,0x00,0x00
		,0x7f,0xff,0xff,0xff,0xc0,0x00
		,0x7f,0xff,0xff,0xff,0xfe,0x00
		,0x7f,0xff,0xff,0xff,0xff,0xf0
		,0x70,0xff,0xff,0xff,0xff,0xfc
		,0x60,0x7f,0xff,0x80,0x07,0xfc
		,0x40,0x3e,0x00,0x00,0x00,0xfc
		,0x40,0x1e,0x00,0x00,0x00,0x7c
		,0x40,0x1e,0x00,0x00,0x00,0x3c
		,0x40,0x0e,0x00,0x00,0x00,0x1c
		,0x40,0x0e,0x00,0x00,0x00,0x0c
		,0x42,0x0e,0x00,0x00,0x00,0x0c
		,0x77,0x06,0x00,0x00,0x00,0x0c
		,0x7f,0x06,0x00,0x07,0x80,0x0c
		,0x7f,0x86,0x00,0x7f,0xe0,0x08
		,0x7f,0x86,0x00,0x7f,0xe0,0x08
		,0x7f,0x06,0x00,0x7f,0xe0,0x08
		,0x7c,0x06,0x00,0x7f,0xe0,0x08
		,0x7c,0x06,0x00,0x7f,0xe0,0x08
		,0x7c,0x06,0x00,0x7f,0xe0,0x08
		,0x7c,0x06,0x00,0x7f,0xe0,0x08
		,0x7c,0x0e,0x00,0x7f,0xe0,0x08
		,0x7c,0x0e,0x00,0x7f,0xe0,0x08
		,0x7e,0x1e,0x00,0x7f,0xe0,0x18
		,0x5f,0x0e,0x00,0x7f,0xe0,0x18
		,0x47,0x0e,0x00,0x7f,0xe0,0x18
		,0x47,0x06,0x00,0x7f,0xe0,0x18
		,0x47,0x86,0x00,0x7f,0xe0,0x10
		,0x43,0x86,0x00,0x7f,0xc0,0x10
		,0x63,0x86,0x00,0x7f,0xc0,0x30
		,0x61,0x06,0x00,0x7f,0x80,0x30
		,0x60,0x06,0x00,0x7f,0x00,0x70
		,0x70,0x06,0x00,0x7c,0x00,0x70
		,0x70,0x06,0x00,0x40,0x00,0xf0
		,0x38,0x06,0x00,0x00,0x01,0xf0
		,0x18,0x06,0x00,0x00,0x03,0xf0
		,0x0c,0x06,0x00,0x00,0x0f,0xf0
		,0x06,0x0e,0x00,0x00,0x3f,0xe0
		,0x03,0x9e,0x00,0x00,0xff,0x00
		,0x01,0xfe,0x00,0x07,0xf8,0x00
		,0x00,0xfe,0x00,0x7f,0xc0,0x00
		,0x00,0x7e,0x03,0xfe,0x00,0x00
		,0x00,0x3e,0x3f,0xe0,0x00,0x00
		,0x00,0x1f,0xff,0x00,0x00,0x00
		,0x00,0x0f,0xf8,0x00,0x00,0x00
		,0x00,0x07,0xc0,0x00,0x00,0x00
		,0x00,0x00,0x00,0x00,0x00,0x00
		,0x00,0x00,0x00,0x00,0x00,0x00};
			
  #endif
#endif

// Here comes a compile-time operation to match the extruder symbols
// on the info screen to the set number of extruders in configuration.h
//
// When only one extruder is selected, the "1" on the symbol will not
// be displayed.

// #if EXTRUDERS == 1
  // #define STATUS_SCREENWIDTH     115 //Width in pixels
  // #define STATUS_SCREENHEIGHT     19 //Height in pixels
  // #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
  // const unsigned char status_screen0_bmp[] PROGMEM = { //AVR-GCC, WinAVR
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x0C, 0x60,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x0E, 0x20,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4F, 0x0F, 0x20,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x0F, 0xA0,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x07, 0xA0,
    // 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x40, 0x60, 0x20,
    // 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x82, 0x00, 0x40, 0xF0, 0x20,
    // 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x82, 0x00, 0x40, 0xF0, 0x20,
    // 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x40, 0x60, 0x20,
    // 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x08, 0x00, 0x5E, 0x07, 0xA0,
    // 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x10, 0x00, 0x5F, 0x0F, 0xA0,
    // 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x10, 0x00, 0x4F, 0x0F, 0x20,
    // 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x08, 0x00, 0x47, 0x0E, 0x20,
    // 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x63, 0x0C, 0x60,
    // 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
    // 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xE0,
    // 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00
  // };

   // #define STATUS_SCREENWIDTH     115 //Width in pixels
  // #define STATUS_SCREENHEIGHT     19 //Height in pixels
  // #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
  // const unsigned char status_screen1_bmp[] PROGMEM = { //AVR-GCC, WinAVR
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0xF8, 0x60,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF8, 0x20,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x01, 0xA0,
    // 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x5C, 0x63, 0xA0,
    // 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x82, 0x00, 0x5E, 0xF7, 0xA0,
    // 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x82, 0x00, 0x5E, 0xF7, 0xA0,
    // 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x5C, 0x63, 0xA0,
    // 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x08, 0x00, 0x58, 0x01, 0xA0,
    // 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x10, 0x00, 0x40, 0x60, 0x20,
    // 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x10, 0x00, 0x40, 0xF0, 0x20,
    // 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x08, 0x00, 0x41, 0xF8, 0x20,
    // 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x61, 0xF8, 0x60,
    // 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
    // 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xE0,
    // 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00
  // }; 

// /*   #define STATUS_SCREENWIDTH     115 //Width in pixels
  // #define STATUS_SCREENHEIGHT     25 //Height in pixels
  // #define STATUS_SCREENBYTEWIDTH  4 //Width in bytes
  // const unsigned char status_screen1_bmp[] PROGMEM = { //AVR-GCC, WinAVR
// 0xff,0xff,0xff,0xff
// ,0xe0,0x7f,0xff,0xff
// ,0xc0,0x0f,0xff,0xff
// ,0x80,0x03,0xdf,0xff
// ,0x80,0x00,0x00,0x7f
// ,0x83,0xc0,0x00,0x1f
// ,0x87,0xc0,0x00,0x0f
// ,0x87,0x80,0x00,0x07
// ,0x81,0x83,0x00,0x07
// ,0x81,0x87,0x06,0x07
// ,0x81,0x87,0x82,0x07
// ,0x87,0x87,0x83,0x07
// ,0x87,0x83,0x83,0x0f
// ,0xc7,0x83,0x83,0x0f
// ,0xc7,0xc1,0x06,0x0f
// ,0xc3,0xe0,0x06,0x01
// ,0xc3,0xe0,0x06,0x11
// ,0xc1,0xf0,0x0c,0x11
// ,0xe0,0xf0,0x00,0x3f
// ,0xe0,0x00,0x00,0x3f
// ,0xf0,0x00,0x00,0x7f
// ,0xf8,0x00,0x80,0xff
// ,0xfc,0x01,0xf3,0xff
// ,0xff,0x0f,0xff,0xff
// ,0xff,0xff,0xff,0xff
  // };   */
  
  
  // #define MIRACLES_WIDTH     115 //Width in pixels
  // #define MIRACLES_HEIGHT     28 //Height in pixels
  // #define MIRACLES_BYTEWIDTH  5 //Width in bytes
  // const unsigned char miracles_logo_bmp[] PROGMEM = { //AVR-GCC, WinAVR
	// 0x00,0x00,0x00,0x00,0x00
	// ,0x1f,0xe0,0x00,0x00,0x00
	// ,0x3f,0xfc,0x00,0x00,0x00
	// ,0x7f,0xff,0x83,0xc0,0x00
	// ,0x7f,0xff,0xff,0xfe,0x00
	// ,0x7e,0x3f,0xff,0xff,0x80
	// ,0xf8,0x1f,0xff,0xff,0x80
	// ,0xf8,0x1f,0xff,0xff,0xc0
	// ,0xfe,0x3f,0xff,0xff,0xc0
	// ,0xff,0x3f,0x1f,0xff,0xc0
	// ,0x7f,0x3e,0x0f,0x9f,0xc0
	// ,0x7f,0x3e,0x0f,0xcf,0xc0
	// ,0x78,0x3e,0x0f,0xcf,0xc0
	// ,0x78,0x3f,0x0f,0xcf,0xc0
	// ,0x7c,0x3f,0x0f,0xcf,0x80
	// ,0x7c,0x1f,0x8f,0xcf,0x80
	// ,0x3c,0x0f,0xdf,0x8f,0xb0
	// ,0x3c,0x0f,0xff,0x9f,0x78
	// ,0x3e,0x07,0xff,0x9f,0x7c
	// ,0x3e,0x03,0xff,0x3f,0x78
	// ,0x1f,0x03,0xff,0xfe,0x30
	// ,0x1f,0xff,0xff,0xfe,0x00
	// ,0x0f,0xff,0xff,0xfc,0x00
	// ,0x0f,0xff,0xff,0xf8,0x00
	// ,0x07,0xff,0xef,0xf0,0x00
	// ,0x03,0xff,0xc1,0xc0,0x00
	// ,0x00,0xfe,0x00,0x00,0x00
	// ,0x00,0x00,0x00,0x00,0x00

  // };   
 
  //Nozzole Icon Bitmap
  // #define HEATER_ICON_WIDTH     128 //Width in pixels
  // #define HEATER_ICON_HEIGHT     8 //Height in pixels
  // #define HEATER_ICON_BYTEWIDTH  1 //Width in bytes 
  // const unsigned char heater_icon_bmp[] PROGMEM = { //AVR-GCC, WinAVR
	// 0xfe
	// ,0xfe
	// ,0x7c
	// ,0x7c
	// ,0xfe
	// ,0xfe
	// ,0x7c
	// ,0x10
  // };
  
  
  //Folder Icon bitmap
  // #define FOLDER_ICON_WIDTH     13 //Width in pixels
  // #define FOLDER_ICON_HEIGHT     12 //Height in pixels
  // #define FOLDER_ICON_BYTEWIDTH  2 //Width in bytes 
  // const unsigned char folder_icon_bmp[] PROGMEM = { //AVR-GCC, WinAVR
	// 0x00,0x00
	// ,0x70,0x00
	// ,0xf8,0x00
	// ,0xff,0xc0
	// ,0xff,0xf0
	// ,0xe0,0x10
	// ,0xc0,0x10
	// ,0xc0,0x20
	// ,0xc0,0x20
	// ,0xc0,0x40
	// ,0x7f,0x80
	// ,0x00,0x00
  // };
  
  
  
  // #define FEEDRATE_ICON_WIDTH     15 //Width in pixels
  // #define FEEDRATE_ICON_HEIGHT     15 //Height in pixels
  // #define FEEDRATE_ICON_BYTEWIDTH  2 //Width in bytes 
  // const unsigned char feedrate_icon_bmp[] PROGMEM = { //AVR-GCC, WinAVR
	// 0x01,0xc0
	// ,0x00,0x6c
	// ,0x0e,0x74
	// ,0x00,0xf0
	// ,0x39,0xf8
	// ,0x01,0xce
	// ,0xe6,0xc0
	// ,0x0c,0x60
	// ,0x19,0xe0
	// ,0x23,0x80
	// ,0x00,0x00
	// ,0x00,0x00
	// ,0x00,0x00
	// ,0x00,0x00
	// ,0x00,0x00
  // }; 

  
  // Feedrate Icon Bitmap
  // #define FEEDRATE_ICON_WIDTH     15 //Width in pixels
  // #define FEEDRATE_ICON_HEIGHT     10 //Height in pixels
  // #define FEEDRATE_ICON_BYTEWIDTH  2 //Width in bytes 
  // const unsigned char feedrate_icon_bmp[] PROGMEM = { //AVR-GCC, WinAVR
	// 0x07,0x00
	// ,0x00,0xb0
	// ,0x01,0xd0
	// ,0x03,0xc0
	// ,0x07,0xe0
	// ,0x07,0x30
	// ,0x1b,0x00
	// ,0x31,0x80
	// ,0x67,0x80
	// ,0x84,0x00
  // };  
   
  
  
// #elif EXTRUDERS == 2
  // #define STATUS_SCREENWIDTH     115 //Width in pixels
  // #define STATUS_SCREENHEIGHT     19 //Height in pixels
  // #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
  // const unsigned char status_screen0_bmp[] PROGMEM = { //AVR-GCC, WinAVR
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x0C, 0x60,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x0E, 0x20,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4F, 0x0F, 0x20,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x0F, 0xA0,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x07, 0xA0,
    // 0x7F, 0x80, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x40, 0x60, 0x20,
    // 0xFB, 0xC0, 0x00, 0x79, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x20, 0x82, 0x00, 0x40, 0xF0, 0x20,
    // 0xF3, 0xC0, 0x00, 0x76, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x20, 0x82, 0x00, 0x40, 0xF0, 0x20,
    // 0xEB, 0xC0, 0x00, 0x7E, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x40, 0x60, 0x20,
    // 0x7B, 0x80, 0x00, 0x3D, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x82, 0x08, 0x00, 0x5E, 0x07, 0xA0,
    // 0x7B, 0x80, 0x00, 0x3B, 0xC0, 0x00, 0x00, 0x00, 0x01, 0x04, 0x10, 0x00, 0x5F, 0x0F, 0xA0,
    // 0xFB, 0xC0, 0x00, 0x77, 0xE0, 0x00, 0x00, 0x00, 0x01, 0x04, 0x10, 0x00, 0x4F, 0x0F, 0x20,
    // 0xFB, 0xC0, 0x00, 0x70, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x82, 0x08, 0x00, 0x47, 0x0E, 0x20,
    // 0xFF, 0xC0, 0x00, 0x7F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x63, 0x0C, 0x60,
    // 0x3F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
    // 0x1E, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xE0,
    // 0x0C, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00
  // };

  // #define STATUS_SCREENWIDTH     115 //Width in pixels
  // #define STATUS_SCREENHEIGHT     19 //Height in pixels
  // #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
  // const unsigned char status_screen1_bmp[] PROGMEM = { //AVR-GCC, WinAVR
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0xF8, 0x60,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF8, 0x20,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x01, 0xA0,
    // 0x7F, 0x80, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x5C, 0x63, 0xA0,
    // 0xFB, 0xC0, 0x00, 0x79, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x20, 0x82, 0x00, 0x5E, 0xF7, 0xA0,
    // 0xF3, 0xC0, 0x00, 0x76, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x20, 0x82, 0x00, 0x5E, 0xF7, 0xA0,
    // 0xEB, 0xC0, 0x00, 0x7E, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x5C, 0x63, 0xA0,
    // 0x7B, 0x80, 0x00, 0x3D, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x82, 0x08, 0x00, 0x58, 0x01, 0xA0,
    // 0x7B, 0x80, 0x00, 0x3B, 0xC0, 0x00, 0x00, 0x00, 0x01, 0x04, 0x10, 0x00, 0x40, 0x60, 0x20,
    // 0xFB, 0xC0, 0x00, 0x77, 0xE0, 0x00, 0x00, 0x00, 0x01, 0x04, 0x10, 0x00, 0x40, 0xF0, 0x20,
    // 0xFB, 0xC0, 0x00, 0x70, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x82, 0x08, 0x00, 0x41, 0xF8, 0x20,
    // 0xFF, 0xC0, 0x00, 0x7F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x61, 0xF8, 0x60,
    // 0x3F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
    // 0x1E, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xE0,
    // 0x0C, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00
  // };
// #else
  // #define STATUS_SCREENWIDTH     115 //Width in pixels
  // #define STATUS_SCREENHEIGHT     19 //Height in pixels
  // #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
  // const unsigned char status_screen0_bmp[] PROGMEM = { //AVR-GCC, WinAVR
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x0C, 0x60,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x0E, 0x20,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4F, 0x0F, 0x20,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x0F, 0xA0,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x07, 0xA0,
    // 0x7F, 0x80, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x41, 0x04, 0x00, 0x40, 0x60, 0x20,
    // 0xFB, 0xC0, 0x00, 0x79, 0xE0, 0x00, 0x79, 0xE0, 0x00, 0x20, 0x82, 0x00, 0x40, 0xF0, 0x20,
    // 0xF3, 0xC0, 0x00, 0x76, 0xE0, 0x00, 0x76, 0xE0, 0x00, 0x20, 0x82, 0x00, 0x40, 0xF0, 0x20,
    // 0xEB, 0xC0, 0x00, 0x7E, 0xE0, 0x00, 0x7E, 0xE0, 0x00, 0x41, 0x04, 0x00, 0x40, 0x60, 0x20,
    // 0x7B, 0x80, 0x00, 0x3D, 0xC0, 0x00, 0x39, 0xC0, 0x00, 0x82, 0x08, 0x00, 0x5E, 0x07, 0xA0,
    // 0x7B, 0x80, 0x00, 0x3B, 0xC0, 0x00, 0x3E, 0xC0, 0x01, 0x04, 0x10, 0x00, 0x5F, 0x0F, 0xA0,
    // 0xFB, 0xC0, 0x00, 0x77, 0xE0, 0x00, 0x76, 0xE0, 0x01, 0x04, 0x10, 0x00, 0x4F, 0x0F, 0x20,
    // 0xFB, 0xC0, 0x00, 0x70, 0xE0, 0x00, 0x79, 0xE0, 0x00, 0x82, 0x08, 0x00, 0x47, 0x0E, 0x20,
    // 0xFF, 0xC0, 0x00, 0x7F, 0xE0, 0x00, 0x7F, 0xE0, 0x00, 0x41, 0x04, 0x00, 0x63, 0x0C, 0x60,
    // 0x3F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
    // 0x1E, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xE0,
    // 0x0C, 0x00, 0x00, 0x06, 0x00, 0x00, 0x06, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00
  // };

  // #define STATUS_SCREENWIDTH     115 //Width in pixels
  // #define STATUS_SCREENHEIGHT     19 //Height in pixels
  // #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
  // const unsigned char status_screen1_bmp[] PROGMEM = { //AVR-GCC, WinAVR
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0xF8, 0x60,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF8, 0x20,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x01, 0xA0,
    // 0x7F, 0x80, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x41, 0x04, 0x00, 0x5C, 0x63, 0xA0,
    // 0xFB, 0xC0, 0x00, 0x79, 0xE0, 0x00, 0x79, 0xE0, 0x00, 0x20, 0x82, 0x00, 0x5E, 0xF7, 0xA0,
    // 0xF3, 0xC0, 0x00, 0x76, 0xE0, 0x00, 0x76, 0xE0, 0x00, 0x20, 0x82, 0x00, 0x5E, 0xF7, 0xA0,
    // 0xEB, 0xC0, 0x00, 0x7E, 0xE0, 0x00, 0x7E, 0xE0, 0x00, 0x41, 0x04, 0x00, 0x5C, 0x63, 0xA0,
    // 0x7B, 0x80, 0x00, 0x3D, 0xC0, 0x00, 0x39, 0xC0, 0x00, 0x82, 0x08, 0x00, 0x58, 0x01, 0xA0,
    // 0x7B, 0x80, 0x00, 0x3B, 0xC0, 0x00, 0x3E, 0xC0, 0x01, 0x04, 0x10, 0x00, 0x40, 0x60, 0x20,
    // 0xFB, 0xC0, 0x00, 0x77, 0xE0, 0x00, 0x76, 0xE0, 0x01, 0x04, 0x10, 0x00, 0x40, 0xF0, 0x20,
    // 0xFB, 0xC0, 0x00, 0x70, 0xE0, 0x00, 0x79, 0xE0, 0x00, 0x82, 0x08, 0x00, 0x41, 0xF8, 0x20,
    // 0xFF, 0xC0, 0x00, 0x7F, 0xE0, 0x00, 0x7F, 0xE0, 0x00, 0x41, 0x04, 0x00, 0x61, 0xF8, 0x60,
    // 0x3F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
    // 0x1E, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xE0,
    // 0x0C, 0x00, 0x00, 0x06, 0x00, 0x00, 0x06, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00
  // };    
//#endif // Extruders








  #define STATUS_SCREENWIDTH     115 //Width in pixels
  #define STATUS_SCREENHEIGHT     19 //Height in pixels
  #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
  const unsigned char status_screen0_bmp[] PROGMEM = { //AVR-GCC, WinAVR
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x0C, 0x60,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x0E, 0x20,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4F, 0x0F, 0x20,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x0F, 0xA0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x07, 0xA0,
    0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x40, 0x60, 0x20,
    0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x82, 0x00, 0x40, 0xF0, 0x20,
    0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x82, 0x00, 0x40, 0xF0, 0x20,
    0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x40, 0x60, 0x20,
    0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x08, 0x00, 0x5E, 0x07, 0xA0,
    0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x10, 0x00, 0x5F, 0x0F, 0xA0,
    0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x10, 0x00, 0x4F, 0x0F, 0x20,
    0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x08, 0x00, 0x47, 0x0E, 0x20,
    0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x63, 0x0C, 0x60,
    0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
    0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xE0,
    0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00
  };

   #define STATUS_SCREENWIDTH     115 //Width in pixels
  #define STATUS_SCREENHEIGHT     19 //Height in pixels
  #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
  const unsigned char status_screen1_bmp[] PROGMEM = { //AVR-GCC, WinAVR
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0xF8, 0x60,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF8, 0x20,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x01, 0xA0,
    0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x5C, 0x63, 0xA0,
    0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x82, 0x00, 0x5E, 0xF7, 0xA0,
    0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x82, 0x00, 0x5E, 0xF7, 0xA0,
    0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x5C, 0x63, 0xA0,
    0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x08, 0x00, 0x58, 0x01, 0xA0,
    0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x10, 0x00, 0x40, 0x60, 0x20,
    0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x10, 0x00, 0x40, 0xF0, 0x20,
    0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x08, 0x00, 0x41, 0xF8, 0x20,
    0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x61, 0xF8, 0x60,
    0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
    0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xE0,
    0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00
  }; 

/*   #define STATUS_SCREENWIDTH     115 //Width in pixels
  #define STATUS_SCREENHEIGHT     25 //Height in pixels
  #define STATUS_SCREENBYTEWIDTH  4 //Width in bytes
  const unsigned char status_screen1_bmp[] PROGMEM = { //AVR-GCC, WinAVR
0xff,0xff,0xff,0xff
,0xe0,0x7f,0xff,0xff
,0xc0,0x0f,0xff,0xff
,0x80,0x03,0xdf,0xff
,0x80,0x00,0x00,0x7f
,0x83,0xc0,0x00,0x1f
,0x87,0xc0,0x00,0x0f
,0x87,0x80,0x00,0x07
,0x81,0x83,0x00,0x07
,0x81,0x87,0x06,0x07
,0x81,0x87,0x82,0x07
,0x87,0x87,0x83,0x07
,0x87,0x83,0x83,0x0f
,0xc7,0x83,0x83,0x0f
,0xc7,0xc1,0x06,0x0f
,0xc3,0xe0,0x06,0x01
,0xc3,0xe0,0x06,0x11
,0xc1,0xf0,0x0c,0x11
,0xe0,0xf0,0x00,0x3f
,0xe0,0x00,0x00,0x3f
,0xf0,0x00,0x00,0x7f
,0xf8,0x00,0x80,0xff
,0xfc,0x01,0xf3,0xff
,0xff,0x0f,0xff,0xff
,0xff,0xff,0xff,0xff
  };   */
  
  
  #define MIRACLES_WIDTH     115 //Width in pixels
  #define MIRACLES_HEIGHT     28 //Height in pixels
  #define MIRACLES_BYTEWIDTH  5 //Width in bytes
  const unsigned char miracles_logo_bmp[] PROGMEM = { //AVR-GCC, WinAVR
	0x00,0x00,0x00,0x00,0x00
	,0x1f,0xe0,0x00,0x00,0x00
	,0x3f,0xfc,0x00,0x00,0x00
	,0x7f,0xff,0x83,0xc0,0x00
	,0x7f,0xff,0xff,0xfe,0x00
	,0x7e,0x3f,0xff,0xff,0x80
	,0xf8,0x1f,0xff,0xff,0x80
	,0xf8,0x1f,0xff,0xff,0xc0
	,0xfe,0x3f,0xff,0xff,0xc0
	,0xff,0x3f,0x1f,0xff,0xc0
	,0x7f,0x3e,0x0f,0x9f,0xc0
	,0x7f,0x3e,0x0f,0xcf,0xc0
	,0x78,0x3e,0x0f,0xcf,0xc0
	,0x78,0x3f,0x0f,0xcf,0xc0
	,0x7c,0x3f,0x0f,0xcf,0x80
	,0x7c,0x1f,0x8f,0xcf,0x80
	,0x3c,0x0f,0xdf,0x8f,0xb0
	,0x3c,0x0f,0xff,0x9f,0x78
	,0x3e,0x07,0xff,0x9f,0x7c
	,0x3e,0x03,0xff,0x3f,0x78
	,0x1f,0x03,0xff,0xfe,0x30
	,0x1f,0xff,0xff,0xfe,0x00
	,0x0f,0xff,0xff,0xfc,0x00
	,0x0f,0xff,0xff,0xf8,0x00
	,0x07,0xff,0xef,0xf0,0x00
	,0x03,0xff,0xc1,0xc0,0x00
	,0x00,0xfe,0x00,0x00,0x00
	,0x00,0x00,0x00,0x00,0x00

  };   
 
  //Nozzole Icon Bitmap
  #define HEATER_ICON_WIDTH     128 //Width in pixels
  #define HEATER_ICON_HEIGHT     8 //Height in pixels
  #define HEATER_ICON_BYTEWIDTH  1 //Width in bytes 
  const unsigned char heater_icon_bmp[] PROGMEM = { //AVR-GCC, WinAVR
	0xfe
	,0xfe
	,0x7c
	,0x7c
	,0xfe
	,0xfe
	,0x7c
	,0x10
  };
  
  
/*   //Folder Icon bitmap
  #define FOLDER_ICON_WIDTH     13 //Width in pixels
  #define FOLDER_ICON_HEIGHT     12 //Height in pixels
  #define FOLDER_ICON_BYTEWIDTH  2 //Width in bytes 
  const unsigned char folder_icon_bmp[] PROGMEM = { //AVR-GCC, WinAVR
	0x00,0x00
	,0x70,0x00
	,0xf8,0x00
	,0xff,0xc0
	,0xff,0xf0
	,0xe0,0x10
	,0xc0,0x10
	,0xc0,0x20
	,0xc0,0x20
	,0xc0,0x40
	,0x7f,0x80
	,0x00,0x00
  }; */
  
   //Folder Icon bitmap
  #define FOLDER_ICON_WIDTH     10 //Width in pixels
  #define FOLDER_ICON_HEIGHT     11 //Height in pixels
  #define FOLDER_ICON_BYTEWIDTH  2 //Width in bytes 
  const unsigned char folder_icon_bmp[] PROGMEM = { //AVR-GCC, WinAVR
0xfe,0x00
,0x85,0x00
,0x84,0x80
,0x84,0x40
,0x87,0xc0
,0x80,0x40
,0x9e,0x40
,0x80,0x40
,0x9e,0x40
,0x80,0x40
,0xff,0xc0
  };
  

  
  
  
  // #define FEEDRATE_ICON_WIDTH     15 //Width in pixels
  // #define FEEDRATE_ICON_HEIGHT     15 //Height in pixels
  // #define FEEDRATE_ICON_BYTEWIDTH  2 //Width in bytes 
  // const unsigned char feedrate_icon_bmp[] PROGMEM = { //AVR-GCC, WinAVR
	// 0x01,0xc0
	// ,0x00,0x6c
	// ,0x0e,0x74
	// ,0x00,0xf0
	// ,0x39,0xf8
	// ,0x01,0xce
	// ,0xe6,0xc0
	// ,0x0c,0x60
	// ,0x19,0xe0
	// ,0x23,0x80
	// ,0x00,0x00
	// ,0x00,0x00
	// ,0x00,0x00
	// ,0x00,0x00
	// ,0x00,0x00
  // }; 

  
  //Feedrate Icon Bitmap
  #define FEEDRATE_ICON_WIDTH     15 //Width in pixels
  #define FEEDRATE_ICON_HEIGHT     10 //Height in pixels
  #define FEEDRATE_ICON_BYTEWIDTH  2 //Width in bytes 
  const unsigned char feedrate_icon_bmp[] PROGMEM = { //AVR-GCC, WinAVR
	0x07,0x00
	,0x00,0xb0
	,0x01,0xd0
	,0x03,0xc0
	,0x07,0xe0
	,0x07,0x30
	,0x1b,0x00
	,0x31,0x80
	,0x67,0x80
	,0x84,0x00
  }; 
